set nocompatible
set autoindent
set ignorecase
set incsearch
set smartcase
"set clipboard=unnamed

" Undo and backups {{{
" This enables backups and undo and creates an undo point after 
" the end of every sentence.
set undofile
set undodir=~/.cache/vim/
set backupdir=~/.cache/vim/
set directory=~/.cache/vim/

inoremap . .<C-g>u
inoremap ! !<C-g>u
inoremap ? ?<C-g>u
inoremap : :<C-g>u
"}}}

" Vundle Config {{{
filetype off
set rtp+=~/.vim/bundle/vundle/ 
call vundle#rc()

if has("python")
	Bundle 'SirVer/ultisnips'
	Bundle 'klen/python-mode'
endif

Bundle 'gmarik/vundle'
Bundle 'bling/vim-airline'
Bundle 'altercation/vim-colors-solarized'
Bundle 'nanotech/jellybeans.vim'
Bundle 'godlygeek/tabular'
Bundle 'maksimr/vim-translator'
Bundle 'scrooloose/nerdtree'
Bundle 'tpope/vim-speeddating'
Bundle 'tpope/vim-fugitive'
Bundle 'tpope/vim-surround'
Bundle 'utl.vim'
Bundle 'vim-pandoc/vim-pandoc'
Bundle 'ervandew/supertab'

filetype plugin indent on
" }}}

" Look and Feel {{{
set showcmd
set laststatus=2

set cursorline
set cursorcolumn

set number
set relativenumber

" Make sure the background is always transparent
autocmd ColorScheme * highlight Normal ctermbg=None
autocmd ColorScheme * highlight NonText ctermbg=None

set background=dark
colorscheme jellybeans

set guifont="Inconsolata-dz for Powerline Medium 10"
set guioptions=""

if has("gui_running")
	set title
	let &titlestring = "gvim %f"
endif

if has("syntax")
	syntax on
endif
"}}}

" Window mappings {{{
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l
"}}}

" Leader mappings {{{
map <leader>t :NERDTree<CR>
"}}}

" Toggle between relative, absolute, and no line numbers {{{
function! NumberToggle()
if(&relativenumber == 1)
	set norelativenumber
	set number
elseif(&number == 1)
	set nonumber
else
	set number
	set relativenumber
endif
endfunc

nnoremap <C-n> :call NumberToggle()<cr>
"}}}

" UltiSnips Config {{{
let g:UltiSnipsSnippetDirectories=["UltiSnips","snippets"]
"}}}

" File-type functions {{{
function! MailInit()
	set tw=72 ft=mail
	exe "normal O"
	exe "normal O"
	set spell
	start
endfunc

function! PandocInit()
	set tw=72 ts=4 sts=4 et
	let g:pandoc_use_hard_wraps = 1
	let g:pandoc_auto_format = 1
	let g:pandoc_use_conceal = 0
	set ft=pandoc
	set spell
endfun
" }}}

" Auto-commands {{{
au BufNewFile,BufRead /tmp/mutt* :call MailInit() 
au BufNewFile,BufRead *.markdown,*.md :call PandocInit()
au FileType python setlocal tabstop=8 expandtab shiftwidth=4 softtabstop=4 tw=79 spell
" }}}

" vim: fdm=marker
