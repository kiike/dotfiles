#!/usr/bin/env python
import os
import json
import argparse

'''
A simple bookmark manager.
'''

def add(json_data, args):
    mark = {'tags': [tag for tag in args.tags],
            'uri': args.uri,
            'title': args.title}
    json_data.append(mark)
    return json.dump(json_data, f, indent=2, ensure_ascii=False)



def search(json_data, args):
    for entry in json_data:
        if args.tag is not None:
            for t in entry.get('tags'):
                if args.tag in t:
                    return entry.get('uri')

        if args.title is not None:
            if args.title in entry.get('title'.lower()):
                return entry.get('uri')

        if args.uri is not None:
            if args.uri in entry.get('uri'):
                return entry.get('uri')


def dump(json_data, args):
    out = []
    for entry in json_data:
        if args.tags:
            for t in entry.get('tags'):
                if t not in out:
                    out.append(t)

        if args.titles:
            if entry.get('title') not in out:
                out.append(entry.get('title'))

        if args.uris:
            if entry.get('uri') not in out:
                out.append(entry.get('uri'))

    return('\n'.join(out))


parser = argparse.ArgumentParser()
parser.add_argument('--file', '-f', help='Bookmarks file',
                    dest='in_file', default='~/.bookmarks')
subparsers = parser.add_subparsers(help='Available modes',
        dest='parser')
subparsers.required=True

parser_search = subparsers.add_parser('search', aliases=['s'])
parser_search.add_argument('--tag', '-g', help='Search by tag')
parser_search.add_argument('--uri', '-u', help='Search by URI')
parser_search.add_argument('--title', '-t', help='Search by title')
parser_search.set_defaults(func=search)

parser_dump = subparsers.add_parser('dump', aliases=['d'])
parser_dump.add_argument('--tags', '-g', action='store_true', help='Dump tags')
parser_dump.add_argument('--uris', '-u', action='store_true', help='Dump URIs')
parser_dump.add_argument('--titles', '-t', action='store_true', help='Dump titles')
parser_dump.set_defaults(func=dump)

parser_add = subparsers.add_parser('add', aliases=['a'])
parser_add.add_argument('--tags', '-g', required=True, nargs='+',
                        help='Assign tags')
parser_add.add_argument('--uri', '-u', required=True, help='Assign an URI')
parser_add.add_argument('--title', '-t', required=True, help='Assign a title')
parser_add.set_defaults(func=add)

args = parser.parse_args()

with open(os.path.expanduser(args.in_file), mode='r+t') as f:
    ret = args.func(json.load(f), args)
    if ret is not None:
        print(type(ret))
        print(ret)
